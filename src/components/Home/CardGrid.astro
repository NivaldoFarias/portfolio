---
import type { RepositoryData } from "../../utils/github-api";

import Card from "./Card.astro";
import { api } from "../../utils/github-api";

const listUserRepos = await api.listUserRepos({
	per_page: 100,
	sort: "updated",
	direction: "desc",
});

const repoPriority = "portfolio";
const sortedByStargazersCount = listUserRepos?.sort((a, b) =>
	b.name === repoPriority ? 1 : b.stargazers_count - a.stargazers_count,
);

const defaultCards: Partial<RepositoryData>[] = [
	{
		html_url: "https://github.com/NivaldoFarias",
		name: "Github Profile",
		description: "Explore the projects I've previously worked on.",
		topics: ["github"],
	},
	{
		html_url: "https://astro.build/",
		name: "Astro",
		description: "This project was built with Astro. Explore their documentation.",
		topics: ["astro"],
	},
	{
		html_url: "https://daisyui.com/",
		name: "Themes",
		description: "Themes and color palettes powered by DaisyUI.",
		topics: ["tailwindcss", "daisyui"],
	},
	{
		html_url: "https://tailwindcss.com/",
		name: "Tailwind CSS",
		description: "All Styles and Layout are powered by Tailwind CSS.",
		topics: ["tailwindcss"],
	},
];
---

<ul
	role="list"
	class="grid grid-cols-1 sm:grid-cols-2 p-0 min-h-[8rem] min-w-[16rem] link-card-grid gap-x-3 gap-y-8"
>
	{
		sortedByStargazersCount?.length
			? sortedByStargazersCount.map((repo) =>
					!repo.fork && !repo.private ? <Card data={repo} /> : null,
				)
			: defaultCards.map((data) => <Card data={data} />)
	}
</ul>
